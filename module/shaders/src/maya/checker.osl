
//
// This source file is part of appleseed.
// Visit http://appleseedhq.net/ for additional information and resources.
//
// This software is released under the MIT license.
//
// Copyright (c) 2016 Haggi Krey, The appleseedhq Organization
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

#include "mayautils.h"

shader checker
(
    vector uvCoord = 0,
    vector color1 = 1,
    vector color2 = 0,
    float contrast = 1.0,
    MAYA_COLORBALANCE,
    MAYA_DEFAULT_OUTPUT
)
{
    float s = 0.0;
    float t = 0.0;
    if (isconnected(uvCoord))
    {
        s = uvCoord[0];
        t = uvCoord[1];
    }
    else
    {
        s = u;
        t = v;
    }
    float ss = floor(s * 2);
    float tt = floor(t * 2);
    
    vector mixColor = mix(color1, color2, 0.5);
    vector contrastColor1 = color1 * contrast + (1.0 - contrast) * mixColor;
    vector contrastColor2 = color2 * contrast + (1.0 - contrast) * mixColor;
    vector C = mix (contrastColor1, contrastColor2, mod(ss+tt, 2));
    
    C = colorBalance(C, colorGain, colorOffset);
    outColor = C;    
    outAlpha = luminance(color(outColor));
}
