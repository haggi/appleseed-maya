OpenShadingLanguage 1.00
# Compiled by oslc 1.6.8
shader uberShader	%meta{string,help,"uber shader"} %meta{string,mayaClassification,"Appleseed/material:shader/surface:swatch/AppleseedRenderSwatch"} %meta{int,mayaId,0} 
param	int	matte	0		%meta{string,help,"Use matte"} %meta{string,hint,"useAsBool"}  %read{1,1} %write{2147483647,-1}
param	vector	normalCamera	0 0 0		%read{21,274} %write{0,0} %initexpr
param	float	diffuseValue	0.80000001		%meta{string,help,"Diffuse reflectivity multiplier"} %meta{float,min,0} %meta{float,max,1}  %read{22,26} %write{2147483647,-1}
param	vector	diffuseColor	1 1 1		%meta{string,help,"Color"} %meta{string,hint,"useAsColor"}  %read{15,15} %write{2147483647,-1}
param	float	roughness	0		%meta{string,help,"Surface roughness. Mix between lambert and orenNayar."}  %read{19,286} %write{2147483647,-1}
param	float	backlighting	0		%meta{string,help,"Backlighting, show light though a surface (poor mans translucency)."}  %read{2147483647,-1} %write{2147483647,-1}
param	float	translucency	0		%meta{string,help,"Translucency."} %meta{float,min,0} %meta{float,max,1}  %read{28,51} %write{2147483647,-1}
param	vector	translucencyColor	0 0 0		%meta{string,help,"Translucency color"} %meta{string,hint,"useAsColor"}  %read{16,16} %write{2147483647,-1}
param	float	specular1	0.5		%meta{string,help,"Specularity 1 value"} %meta{float,min,0} %meta{float,max,1}  %read{57,191} %write{2147483647,-1}
param	float	specularIOR1	1.3		%meta{string,help,"Specularity 1 index of reflection"} %meta{float,min,0.001} %meta{float,max,3} %meta{string,hint,"softmax"}  %read{101,101} %write{2147483647,-1}
param	int	specularUseFresnel1	1		%meta{string,help,"Specularity 1 use fresnel"} %meta{string,hint,"useAsBool"}  %read{102,102} %write{2147483647,-1}
param	float	reflectivityAtZeroDeg	0		%meta{string,help,"Reflectivity at 0 Degree"} %meta{float,min,0} %meta{float,max,1}  %read{194,194} %write{2147483647,-1}
param	float	roughness1	0.1		%meta{string,help,"Roughness"} %meta{float,min,0.001} %meta{float,max,1}  %read{180,180} %write{2147483647,-1}
param	vector	specularColor1	0 0 0		%meta{string,help,"Specular color 1"} %meta{string,hint,"useAsColor"}  %read{60,164} %write{2147483647,-1}
param	float	anisotropy1	0		%meta{string,help,"Anisotropy"} %meta{float,min,-1} %meta{float,max,1}  %read{176,185} %write{2147483647,-1}
param	string	reflectionMdf	"ggx"		%meta{string,help,"Microfacet distribution to use: Specular, Beckmann or GGX."} %meta{string,options,"sharp|beckmann|ggx"}  %read{170,190} %write{2147483647,-1}
param	float	refractionIOR	1.3		%meta{string,help,"Refraction Index"} %meta{float,min,-2} %meta{float,max,2} %meta{string,hint,"softminmax"}  %read{199,209} %write{2147483647,-1}
param	vector	refractionColor	1 1 1		%meta{string,help,"Refraction color"} %meta{string,hint,"useAsColor"}  %read{81,271} %write{2147483647,-1}
param	float	absorption	0		%meta{string,help,"Absorption cross section"} %meta{float,min,0} %meta{float,max,1} %meta{string,hint,"softmax"}  %read{201,204} %write{2147483647,-1}
param	vector	absorptionColor	0 0 0		%meta{string,help,"Absorption color"} %meta{string,hint,"useAsColor"}  %read{205,205} %write{2147483647,-1}
param	float	refractivity	0		%meta{string,help,"Refractivity"} %meta{float,min,0} %meta{float,max,1}  %read{78,318} %write{2147483647,-1}
param	float	refractionRoughness	0		%meta{string,help,"Roughness"} %meta{float,min,0.001} %meta{float,max,1}  %read{2147483647,-1} %write{2147483647,-1}
param	string	refractionMdf	"ggx"		%meta{string,help,"Microfacet distribution to use: Specular, Beckmann or GGX."} %meta{string,options,"sharp|beckmann|ggx"}  %read{276,296} %write{2147483647,-1}
param	int	SSS1	0		%meta{string,help,"Use SSS 1"} %meta{string,hint,"useAsBool"}  %read{301,301} %write{2147483647,-1}
param	vector	SSS1Color	0 0 0		%meta{string,help,"Subsurface color"} %meta{string,hint,"useAsColor"}  %read{306,306} %write{2147483647,-1}
param	float	SSS1Weight	0		%meta{string,help,"Subsurface color Multiplier"} %meta{float,min,0} %meta{float,max,1}  %read{2147483647,-1} %write{2147483647,-1}
param	vector	SSS1Radius	0 0 0		%meta{string,help,"Radius per Color"} %meta{string,hint,"useAsColor"}  %read{307,307} %write{2147483647,-1}
param	float	SSS1RadiusMultiplier	1		%meta{string,help,"Subsurface color Multiplier"} %meta{float,min,0} %meta{float,max,3} %meta{string,hint,"softmax"}  %read{307,307} %write{2147483647,-1}
param	vector	emissionColor	0 0 0		%meta{string,help,"Emission Color"} %meta{string,hint,"useAsColor"}  %read{313,313} %write{2147483647,-1}
param	float	emissionMultiplier	1		%meta{string,help,"Emission Color Multiplier"} %meta{float,min,0} %meta{float,max,3} %meta{string,hint,"softmax"}  %read{310,315} %write{2147483647,-1}
oparam	closure color	outColor			%read{2147483647,-1} %write{10,325}
global	vector	I	%read{106,261} %write{2147483647,-1}
global	normal	N	%read{0,309} %write{2147483647,-1}
global	vector	dPdu	%read{169,275} %write{2147483647,-1}
local	float	___216_IdotN	%read{147,262} %write{145,252}
local	float	___216_k	%read{151,263} %write{150,257}
local	float	___217_c	%read{107,242} %write{106,216}
local	float	___217_g	%read{121,242} %write{120,230}
local	float	___219_beta	%read{128,243} %write{124,231}
local	float	___219_F	%read{132,247} %write{130,246}
local	vector	___221_R	%read{2147483647,-1} %write{114,221}
local	vector	___221_T	%read{2147483647,-1} %write{153,270}
local	float	___297_aspect	%read{181,289} %write{179,285}
local	float	___297_r2	%read{181,289} %write{180,286}
local	float	___298_tmp	%read{189,295} %write{187,293}
local	closure color	___299_result	%read{193,193} %write{166,192}
local	float	___299_eta	%read{190,190} %write{167,167}
local	vector	___299_Normal	%read{172,190} %write{168,168}
local	vector	___299_Tangent	%read{190,190} %write{169,169}
local	float	___301_ax	%read{187,190} %write{182,188}
local	float	___301_ay	%read{188,190} %write{184,189}
local	closure color	___302_result	%read{299,299} %write{273,298}
local	vector	___302_Normal	%read{278,296} %write{274,274}
local	vector	___302_Tangent	%read{296,296} %write{275,275}
local	float	___304_ax	%read{293,296} %write{288,294}
local	float	___304_ay	%read{294,296} %write{290,295}
local	closure color	___305_result	%read{53,54} %write{18,53}
local	closure color	___308_reflectionClosure	%read{322,322} %write{11,193}
local	closure color	___308_refractionClosure	%read{318,318} %write{12,300}
local	closure color	___308_subsurfaceClosure	%read{324,324} %write{13,309}
local	closure color	___308_emissionClosure	%read{325,325} %write{14,315}
local	closure color	___308_diffuseClosure	%read{317,317} %write{54,54}
local	float	___308_Kr	%read{141,322} %write{55,194}
local	float	___308_Kt	%read{2147483647,-1} %write{56,269}
local	int	___308_doReflection	%read{99,99} %write{77,77}
local	int	___308_doRefraction	%read{195,195} %write{98,98}
local	float	___309_ior	%read{103,167} %write{101,101}
local	float	___310_from_ior	%read{210,210} %write{199,208}
local	float	___310_to_ior	%read{210,210} %write{200,209}
local	color	___310_absorptionCol	%read{300,300} %write{196,207}
local	float	___312_length	%read{206,206} %write{203,203}
local	float	___310_eta	%read{223,296} %write{210,210}
local	float	___310_krr	%read{248,248} %write{247,268}
local	int	___314_depth	%read{2147483647,-1} %write{303,303}
local	float	___315_sssIOR	%read{309,309} %write{304,304}
local	float	___315_g	%read{309,309} %write{305,305}
const	int	$const1	1		%read{1,296} %write{2147483647,-1}
temp	int	$tmp1	%read{2,2} %write{1,1}
temp	int	$tmp2	%read{3,8} %write{2,7}
const	int	$const2	0		%read{2,310} %write{2147483647,-1}
temp	int	$tmp3	%read{6,6} %write{5,5}
const	string	$const3	"iscameraray"		%read{4,4} %write{2147483647,-1}
const	string	$const4	"camera"		%read{5,5} %write{2147483647,-1}
temp	int	$tmp4	%read{7,7} %write{6,6}
temp	closure color	$tmp5	%read{10,10} %write{9,9}
const	string	$const5	"emission"		%read{9,312} %write{2147483647,-1}
const	float	$const6	0		%read{10,305} %write{2147483647,-1}
temp	color	$tmp6	%read{22,26} %write{15,15}
temp	color	$tmp7	%read{31,51} %write{16,16}
const	string	$const7	"calculateDiffuse"		%read{17,17} %write{2147483647,-1}
temp	int	$tmp8	%read{20,20} %write{19,19}
temp	closure color	$tmp9	%read{23,23} %write{21,21}
const	string	$const8	"oren_nayar"		%read{21,50} %write{2147483647,-1}
temp	color	$tmp10	%read{23,23} %write{22,22}
temp	closure color	$tmp11	%read{27,27} %write{25,25}
const	string	$const9	"diffuse"		%read{24,49} %write{2147483647,-1}
temp	color	$tmp12	%read{27,27} %write{26,26}
temp	int	$tmp13	%read{29,29} %write{28,28}
temp	int	$tmp14	%read{30,48} %write{29,47}
temp	float	$tmp15	%read{32,32} %write{31,31}
temp	int	$tmp16	%read{33,33} %write{32,32}
temp	int	$tmp17	%read{34,39} %write{33,38}
temp	float	$tmp18	%read{36,36} %write{35,35}
temp	int	$tmp19	%read{37,37} %write{36,36}
temp	int	$tmp20	%read{38,38} %write{37,37}
temp	int	$tmp21	%read{40,45} %write{39,44}
const	int	$const10	2		%read{41,91} %write{2147483647,-1}
temp	float	$tmp22	%read{42,42} %write{41,41}
temp	int	$tmp23	%read{43,43} %write{42,42}
temp	int	$tmp24	%read{44,44} %write{43,43}
temp	int	$tmp25	%read{46,46} %write{45,45}
temp	int	$tmp26	%read{47,47} %write{46,46}
temp	closure color	$tmp27	%read{52,52} %write{50,50}
temp	color	$tmp28	%read{52,52} %write{51,51}
temp	closure color	$tmp29	%read{53,53} %write{52,52}
temp	int	$tmp30	%read{58,58} %write{57,57}
temp	int	$tmp31	%read{59,77} %write{58,76}
temp	float	$tmp32	%read{61,61} %write{60,60}
temp	int	$tmp33	%read{62,62} %write{61,61}
temp	int	$tmp34	%read{63,68} %write{62,67}
temp	float	$tmp35	%read{65,65} %write{64,64}
temp	int	$tmp36	%read{66,66} %write{65,65}
temp	int	$tmp37	%read{67,67} %write{66,66}
temp	int	$tmp38	%read{69,74} %write{68,73}
temp	float	$tmp39	%read{71,71} %write{70,70}
temp	int	$tmp40	%read{72,72} %write{71,71}
temp	int	$tmp41	%read{73,73} %write{72,72}
temp	int	$tmp42	%read{75,75} %write{74,74}
temp	int	$tmp43	%read{76,76} %write{75,75}
temp	int	$tmp44	%read{79,79} %write{78,78}
temp	int	$tmp45	%read{80,98} %write{79,97}
temp	float	$tmp46	%read{82,82} %write{81,81}
temp	int	$tmp47	%read{83,83} %write{82,82}
temp	int	$tmp48	%read{84,89} %write{83,88}
temp	float	$tmp49	%read{86,86} %write{85,85}
temp	int	$tmp50	%read{87,87} %write{86,86}
temp	int	$tmp51	%read{88,88} %write{87,87}
temp	int	$tmp52	%read{90,95} %write{89,94}
temp	float	$tmp53	%read{92,92} %write{91,91}
temp	int	$tmp54	%read{93,93} %write{92,92}
temp	int	$tmp55	%read{94,94} %write{93,93}
temp	int	$tmp56	%read{96,96} %write{95,95}
temp	int	$tmp57	%read{97,97} %write{96,96}
const	float	$const11	1		%read{100,320} %write{2147483647,-1}
temp	float	$tmp58	%read{116,155} %write{103,103}
const	string	$const12	"fresnel"		%read{104,212} %write{2147483647,-1}
temp	int	$tmp59	%read{108,108} %write{107,107}
const	string	$const13	"reflect"		%read{110,217} %write{2147483647,-1}
temp	float	$tmp60	%read{112,112} %write{111,111}
temp	float	$tmp61	%read{113,113} %write{112,112}
const	float	$const14	2		%read{112,219} %write{2147483647,-1}
temp	vector	$tmp62	%read{114,114} %write{113,113}
temp	float	$tmp63	%read{117,117} %write{116,116}
const	string	$const15	"sqr"		%read{115,244} %write{2147483647,-1}
temp	float	$tmp64	%read{118,118} %write{117,117}
temp	float	$tmp65	%read{120,120} %write{118,118}
temp	float	$tmp66	%read{120,120} %write{119,119}
temp	int	$tmp67	%read{122,122} %write{121,121}
temp	float	$tmp68	%read{126,126} %write{125,125}
temp	float	$tmp69	%read{127,127} %write{126,126}
temp	float	$tmp70	%read{130,130} %write{127,127}
temp	float	$tmp71	%read{129,129} %write{128,128}
temp	float	$tmp72	%read{130,130} %write{129,129}
const	float	$const16	0.5		%read{134,241} %write{2147483647,-1}
temp	float	$tmp73	%read{133,133} %write{132,132}
temp	float	$tmp74	%read{134,134} %write{133,133}
temp	float	$tmp75	%read{139,139} %write{138,138}
temp	float	$tmp76	%read{136,136} %write{135,135}
temp	float	$tmp77	%read{138,138} %write{136,136}
temp	float	$tmp78	%read{142,142} %write{141,141}
temp	float	$tmp79	%read{143,143} %write{142,142}
const	string	$const17	"refract"		%read{144,251} %write{2147483647,-1}
temp	float	$tmp80	%read{149,149} %write{146,146}
temp	float	$tmp81	%read{148,148} %write{147,147}
temp	float	$tmp82	%read{149,149} %write{148,148}
temp	float	$tmp83	%read{150,150} %write{149,149}
temp	int	$tmp84	%read{152,152} %write{151,151}
const	vector	$const18	0 0 0		%read{153,270} %write{2147483647,-1}
temp	vector	$tmp85	%read{159,159} %write{154,154}
temp	float	$tmp86	%read{157,157} %write{155,155}
temp	float	$tmp87	%read{157,157} %write{156,156}
temp	float	$tmp88	%read{158,158} %write{157,157}
temp	vector	$tmp89	%read{159,159} %write{158,158}
temp	color	$tmp90	%read{173,191} %write{164,164}
const	string	$const19	"calculateReflection"		%read{165,165} %write{2147483647,-1}
const	string	$const20	"sharp"		%read{170,276} %write{2147483647,-1}
temp	int	$tmp91	%read{171,171} %write{170,170}
temp	closure color	$tmp92	%read{174,174} %write{172,172}
const	string	$const21	"reflection"		%read{172,172} %write{2147483647,-1}
temp	color	$tmp93	%read{174,174} %write{173,173}
const	string	$const22	"mdf_roughness"		%read{175,281} %write{2147483647,-1}
temp	float	$tmp94	%read{177,177} %write{176,176}
const	float	$const23	0.89999998		%read{177,283} %write{2147483647,-1}
temp	float	$tmp95	%read{178,178} %write{177,177}
temp	float	$tmp96	%read{179,179} %write{178,178}
const	float	$const24	0.001		%read{182,290} %write{2147483647,-1}
temp	float	$tmp97	%read{182,182} %write{181,181}
temp	float	$tmp98	%read{184,184} %write{183,183}
temp	int	$tmp99	%read{186,186} %write{185,185}
temp	closure color	$tmp100	%read{192,192} %write{190,190}
const	string	$const25	"microfacet"		%read{190,296} %write{2147483647,-1}
temp	color	$tmp101	%read{192,192} %write{191,191}
temp	int	$tmp102	%read{198,198} %write{197,197}
temp	int	$tmp103	%read{2147483647,-1} %write{200,200}
const	string	$const26	"path:ray_ior"		%read{200,208} %write{2147483647,-1}
temp	int	$tmp104	%read{202,202} %write{201,201}
temp	int	$tmp105	%read{2147483647,-1} %write{203,203}
const	string	$const27	"path:ray_length"		%read{203,203} %write{2147483647,-1}
temp	float	$tmp106	%read{205,205} %write{204,204}
temp	vector	$tmp107	%read{206,206} %write{205,205}
temp	vector	$tmp108	%read{207,207} %write{206,206}
temp	int	$tmp109	%read{2147483647,-1} %write{208,208}
temp	int	$tmp110	%read{215,215} %write{214,214}
temp	float	$tmp111	%read{219,219} %write{218,218}
temp	float	$tmp112	%read{220,220} %write{219,219}
temp	vector	$tmp113	%read{221,221} %write{220,220}
temp	float	$tmp114	%read{224,224} %write{223,223}
temp	float	$tmp115	%read{225,225} %write{224,224}
temp	float	$tmp116	%read{227,227} %write{225,225}
temp	float	$tmp117	%read{227,227} %write{226,226}
temp	int	$tmp118	%read{229,229} %write{228,228}
temp	float	$tmp119	%read{233,233} %write{232,232}
temp	float	$tmp120	%read{234,234} %write{233,233}
temp	float	$tmp121	%read{237,237} %write{234,234}
temp	float	$tmp122	%read{236,236} %write{235,235}
temp	float	$tmp123	%read{237,237} %write{236,236}
temp	float	$tmp124	%read{240,240} %write{239,239}
temp	float	$tmp125	%read{241,241} %write{240,240}
temp	float	$tmp126	%read{246,246} %write{245,245}
temp	float	$tmp127	%read{243,243} %write{242,242}
temp	float	$tmp128	%read{245,245} %write{243,243}
temp	float	$tmp129	%read{249,249} %write{248,248}
temp	float	$tmp130	%read{250,250} %write{249,249}
temp	float	$tmp131	%read{256,256} %write{253,253}
temp	float	$tmp132	%read{255,255} %write{254,254}
temp	float	$tmp133	%read{256,256} %write{255,255}
temp	float	$tmp134	%read{257,257} %write{256,256}
temp	int	$tmp135	%read{259,259} %write{258,258}
temp	vector	$tmp136	%read{266,266} %write{261,261}
temp	float	$tmp137	%read{264,264} %write{262,262}
temp	float	$tmp138	%read{264,264} %write{263,263}
temp	float	$tmp139	%read{265,265} %write{264,264}
temp	vector	$tmp140	%read{266,266} %write{265,265}
temp	closure color	$tmp141	%read{300,300} %write{299,299}
temp	color	$tmp142	%read{279,297} %write{271,271}
const	string	$const28	"calculateRefraction"		%read{272,272} %write{2147483647,-1}
temp	int	$tmp143	%read{277,277} %write{276,276}
temp	closure color	$tmp144	%read{280,280} %write{278,278}
const	string	$const29	"refraction"		%read{278,278} %write{2147483647,-1}
temp	color	$tmp145	%read{280,280} %write{279,279}
temp	float	$tmp146	%read{283,283} %write{282,282}
temp	float	$tmp147	%read{284,284} %write{283,283}
temp	float	$tmp148	%read{285,285} %write{284,284}
temp	float	$tmp149	%read{288,288} %write{287,287}
temp	float	$tmp150	%read{290,290} %write{289,289}
temp	int	$tmp151	%read{292,292} %write{291,291}
temp	closure color	$tmp152	%read{298,298} %write{296,296}
temp	color	$tmp153	%read{298,298} %write{297,297}
temp	int	$tmp154	%read{302,302} %write{301,301}
temp	int	$tmp155	%read{2147483647,-1} %write{303,303}
const	string	$const30	"path:ray_depth"		%read{303,303} %write{2147483647,-1}
const	float	$const31	1.3		%read{304,304} %write{2147483647,-1}
const	string	$const32	"normalized_diffusion"		%read{309,309} %write{2147483647,-1}
temp	color	$tmp156	%read{309,309} %write{306,306}
temp	color	$tmp157	%read{309,309} %write{308,308}
temp	vector	$tmp158	%read{308,308} %write{307,307}
const	string	$const33	"as_subsurface"		%read{309,309} %write{2147483647,-1}
temp	int	$tmp159	%read{311,311} %write{310,310}
temp	closure color	$tmp160	%read{314,314} %write{312,312}
temp	color	$tmp161	%read{314,314} %write{313,313}
temp	closure color	$tmp162	%read{315,315} %write{314,314}
temp	float	$tmp163	%read{317,317} %write{316,316}
temp	closure color	$tmp164	%read{319,319} %write{317,317}
temp	closure color	$tmp165	%read{319,319} %write{318,318}
temp	closure color	$tmp166	%read{321,321} %write{319,319}
temp	float	$tmp167	%read{321,321} %write{320,320}
temp	closure color	$tmp168	%read{323,323} %write{321,321}
temp	closure color	$tmp169	%read{323,323} %write{322,322}
temp	closure color	$tmp170	%read{324,324} %write{323,323}
temp	closure color	$tmp171	%read{325,325} %write{324,324}
code normalCamera
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:75
#     float diffuseValue = 0.8
	assign		normalCamera N 	%filename{"H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl"} %line{75} %argrw{"wr"}
code ___main___
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:233
# 	{
	eq		$tmp1 matte $const1 	%filename{"H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl"} %line{233} %argrw{"wrr"}
	neq		$tmp2 $tmp1 $const2 	%argrw{"wrr"}
	if		$tmp2 8 8 	%argrw{"r"}
	functioncall	$const3 6 	%argrw{"r"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:612
# 
	raytype		$tmp3 $const4 	%filename{"H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h"} %line{612} %argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:233
# 	{
	neq		$tmp4 $tmp3 $const2 	%filename{"H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl"} %line{233} %argrw{"wrr"}
	assign		$tmp2 $tmp4 	%argrw{"wr"}
	if		$tmp2 11 326 	%argrw{"r"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:235
# 	}
	closure		$tmp5 $const5 	%line{235} %argrw{"wr"}
	mul		outColor $tmp5 $const6 	%argrw{"wrr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:239
# 		closure color refractionClosure = 0;
	assign		___308_reflectionClosure $const2 	%line{239} %argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:240
# 		closure color subsurfaceClosure = 0;
	assign		___308_refractionClosure $const2 	%line{240} %argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:241
# 		closure color emissionClosure = 0;
	assign		___308_subsurfaceClosure $const2 	%line{241} %argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:242
# 		closure color diffuseClosure = calculateDiffuse(color(diffuseColor), diffuseValue, roughness, translucency, color(translucencyColor), normalCamera);
	assign		___308_emissionClosure $const2 	%line{242} %argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:243
# 		float Kr = 0.0, Kt = 0.0;
	assign		$tmp6 diffuseColor 	%line{243} %argrw{"wr"}
	assign		$tmp7 translucencyColor 	%argrw{"wr"}
	functioncall	$const7 55 	%argrw{"r"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:50
# 
	assign		___305_result $const2 	%line{50} %argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:52
# 		result = diffuseValue * diffuseColor * oren_nayar(normalCamera, roughness);
	neq		$tmp8 roughness $const6 	%line{52} %argrw{"wrr"}
	if		$tmp8 24 28 	%argrw{"r"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:53
# 	else
	closure		$tmp9 $const8 normalCamera roughness 	%line{53} %argrw{"wrrr"}
	mul		$tmp10 diffuseValue $tmp6 	%argrw{"wrr"}
	mul		___305_result $tmp9 $tmp10 	%argrw{"wrr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:55
# 	if( (translucency > 0.0) && (!isBlack(translucencyColor)))
	functioncall	$const9 26 	%line{55} %argrw{"r"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:498
#     return aastep (edge, s, filterwidth(edge), ds);
	closure		$tmp11 $const8 normalCamera $const6 	%filename{"H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h"} %line{498} %argrw{"wrrr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:55
# 	if( (translucency > 0.0) && (!isBlack(translucencyColor)))
	mul		$tmp12 diffuseValue $tmp6 	%filename{"H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl"} %line{55} %argrw{"wrr"}
	mul		___305_result $tmp11 $tmp12 	%argrw{"wrr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:56
# 	{
	gt		$tmp13 translucency $const6 	%line{56} %argrw{"wrr"}
	neq		$tmp14 $tmp13 $const2 	%argrw{"wrr"}
	if		$tmp14 48 48 	%argrw{"r"}
	compref		$tmp15 $tmp7 $const2 	%argrw{"wrr"}
	le		$tmp16 $tmp15 $const6 	%argrw{"wrr"}
	neq		$tmp17 $tmp16 $const2 	%argrw{"wrr"}
	if		$tmp17 39 39 	%argrw{"r"}
	compref		$tmp18 $tmp7 $const1 	%argrw{"wrr"}
	le		$tmp19 $tmp18 $const6 	%argrw{"wrr"}
	neq		$tmp20 $tmp19 $const2 	%argrw{"wrr"}
	assign		$tmp17 $tmp20 	%argrw{"wr"}
	neq		$tmp21 $tmp17 $const2 	%argrw{"wrr"}
	if		$tmp21 45 45 	%argrw{"r"}
	compref		$tmp22 $tmp7 $const10 	%argrw{"wrr"}
	le		$tmp23 $tmp22 $const6 	%argrw{"wrr"}
	neq		$tmp24 $tmp23 $const2 	%argrw{"wrr"}
	assign		$tmp21 $tmp24 	%argrw{"wr"}
	eq		$tmp25 $tmp21 $const2 	%argrw{"wrr"}
	neq		$tmp26 $tmp25 $const2 	%argrw{"wrr"}
	assign		$tmp14 $tmp26 	%argrw{"wr"}
	if		$tmp14 54 54 	%argrw{"r"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:58
# 	}
	functioncall	$const9 51 	%line{58} %argrw{"r"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:498
#     return (s <= e1) ? 0.0 : ((s >= (edge+halfwidth)) ? 1.0 : (s-e1)/width);
	closure		$tmp27 $const8 normalCamera $const6 	%filename{"H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h"} %line{498} %argrw{"wrrr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:58
# 	}
	mul		$tmp28 $tmp7 translucency 	%filename{"H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl"} %line{58} %argrw{"wrr"}
	mul		$tmp29 $tmp27 $tmp28 	%argrw{"wrr"}
	add		___305_result ___305_result $tmp29 	%argrw{"wrr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:60
# }
	assign		___308_diffuseClosure ___305_result 	%line{60} %argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:244
# 		
	assign		___308_Kr $const6 	%line{244} %argrw{"wr"}
	assign		___308_Kt $const6 	%argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:246
# 		int doRefraction = (refractivity > 0.0) && (!isBlack(refractionColor));
	gt		$tmp30 specular1 $const6 	%line{246} %argrw{"wrr"}
	neq		$tmp31 $tmp30 $const2 	%argrw{"wrr"}
	if		$tmp31 77 77 	%argrw{"r"}
	compref		$tmp32 specularColor1 $const2 	%argrw{"wrr"}
	le		$tmp33 $tmp32 $const6 	%argrw{"wrr"}
	neq		$tmp34 $tmp33 $const2 	%argrw{"wrr"}
	if		$tmp34 68 68 	%argrw{"r"}
	compref		$tmp35 specularColor1 $const1 	%argrw{"wrr"}
	le		$tmp36 $tmp35 $const6 	%argrw{"wrr"}
	neq		$tmp37 $tmp36 $const2 	%argrw{"wrr"}
	assign		$tmp34 $tmp37 	%argrw{"wr"}
	neq		$tmp38 $tmp34 $const2 	%argrw{"wrr"}
	if		$tmp38 74 74 	%argrw{"r"}
	compref		$tmp39 specularColor1 $const10 	%argrw{"wrr"}
	le		$tmp40 $tmp39 $const6 	%argrw{"wrr"}
	neq		$tmp41 $tmp40 $const2 	%argrw{"wrr"}
	assign		$tmp38 $tmp41 	%argrw{"wr"}
	eq		$tmp42 $tmp38 $const2 	%argrw{"wrr"}
	neq		$tmp43 $tmp42 $const2 	%argrw{"wrr"}
	assign		$tmp31 $tmp43 	%argrw{"wr"}
	assign		___308_doReflection $tmp31 	%argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:247
# 		if( doReflection ) 
	gt		$tmp44 refractivity $const6 	%line{247} %argrw{"wrr"}
	neq		$tmp45 $tmp44 $const2 	%argrw{"wrr"}
	if		$tmp45 98 98 	%argrw{"r"}
	compref		$tmp46 refractionColor $const2 	%argrw{"wrr"}
	le		$tmp47 $tmp46 $const6 	%argrw{"wrr"}
	neq		$tmp48 $tmp47 $const2 	%argrw{"wrr"}
	if		$tmp48 89 89 	%argrw{"r"}
	compref		$tmp49 refractionColor $const1 	%argrw{"wrr"}
	le		$tmp50 $tmp49 $const6 	%argrw{"wrr"}
	neq		$tmp51 $tmp50 $const2 	%argrw{"wrr"}
	assign		$tmp48 $tmp51 	%argrw{"wr"}
	neq		$tmp52 $tmp48 $const2 	%argrw{"wrr"}
	if		$tmp52 95 95 	%argrw{"r"}
	compref		$tmp53 refractionColor $const10 	%argrw{"wrr"}
	le		$tmp54 $tmp53 $const6 	%argrw{"wrr"}
	neq		$tmp55 $tmp54 $const2 	%argrw{"wrr"}
	assign		$tmp52 $tmp55 	%argrw{"wr"}
	eq		$tmp56 $tmp52 $const2 	%argrw{"wrr"}
	neq		$tmp57 $tmp56 $const2 	%argrw{"wrr"}
	assign		$tmp45 $tmp57 	%argrw{"wr"}
	assign		___308_doRefraction $tmp45 	%argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:248
# 		{
	if		___308_doReflection 195 195 	%line{248} %argrw{"r"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:250
# 			float ior = specularIOR1;
	assign		___308_Kr $const11 	%line{250} %argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:251
# 			if( specularUseFresnel1 )
	assign		___309_ior specularIOR1 	%line{251} %argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:252
# 				fresnel(I, normalCamera, 1.0/ior, Kr, Kt);
	if		specularUseFresnel1 164 164 	%line{252} %argrw{"r"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:253
# 			reflectionClosure = calculateReflection(ior, reflectionMdf, color(specularColor1), specular1, roughness1, anisotropy1, normalCamera);
	div		$tmp58 $const11 ___309_ior 	%line{253} %argrw{"wrr"}
	functioncall	$const12 164 	%argrw{"r"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:244
#     fresnel(I, N, eta, Kr, Kt, R, T);
	functioncall	$const12 164 	%filename{"H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h"} %line{244} %argrw{"r"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:216
#     float c = dot(I, N);
	dot		___217_c I normalCamera 	%line{216} %argrw{"wrr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:217
#     if (c < 0)
	lt		$tmp59 ___217_c $const2 	%line{217} %argrw{"wrr"}
	if		$tmp59 110 110 	%argrw{"r"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:218
#         c = -c;
	neg		___217_c ___217_c 	%line{218} %argrw{"wr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:219
#     R = reflect(I, N);
	functioncall	$const13 115 	%line{219} %argrw{"r"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:205
# vector reflect (vector I, vector N) { return I - 2*dot(N,I)*N; }
	dot		$tmp60 normalCamera I 	%line{205} %argrw{"wrr"}
	mul		$tmp61 $const14 $tmp60 	%argrw{"wrr"}
	mul		$tmp62 $tmp61 normalCamera 	%argrw{"wrr"}
	sub		___221_R I $tmp62 	%argrw{"wrr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:220
#     float g = 1.0 / sqr(eta) - 1.0 + c * c;
	functioncall	$const15 117 	%line{220} %argrw{"r"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:215
#     float sqr(float x) { return x*x; }
	mul		$tmp63 $tmp58 $tmp58 	%line{215} %argrw{"wrr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:220
#     float g = 1.0 / sqr(eta) - 1.0 + c * c;
	div		$tmp64 $const11 $tmp63 	%line{220} %argrw{"wrr"}
	sub		$tmp65 $tmp64 $const11 	%argrw{"wrr"}
	mul		$tmp66 ___217_c ___217_c 	%argrw{"wrr"}
	add		___217_g $tmp65 $tmp66 	%argrw{"wrr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:221
#     if (g >= 0.0) {
	ge		$tmp67 ___217_g $const6 	%line{221} %argrw{"wrr"}
	if		$tmp67 161 164 	%argrw{"r"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:222
#         g = sqrt (g);
	sqrt		___217_g ___217_g 	%line{222} %argrw{"wr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:223
#         float beta = g - c;
	sub		___219_beta ___217_g ___217_c 	%line{223} %argrw{"wrr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:224
#         float F = (c * (g+c) - 1.0) / (c * beta + 1.0);
	add		$tmp68 ___217_g ___217_c 	%line{224} %argrw{"wrr"}
	mul		$tmp69 ___217_c $tmp68 	%argrw{"wrr"}
	sub		$tmp70 $tmp69 $const11 	%argrw{"wrr"}
	mul		$tmp71 ___217_c ___219_beta 	%argrw{"wrr"}
	add		$tmp72 $tmp71 $const11 	%argrw{"wrr"}
	div		___219_F $tmp70 $tmp72 	%argrw{"wrr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:225
#         F = 0.5 * (1.0 + sqr(F));
	functioncall	$const15 133 	%line{225} %argrw{"r"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:215
#     float sqr(float x) { return x*x; }
	mul		$tmp73 ___219_F ___219_F 	%line{215} %argrw{"wrr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:225
#         F = 0.5 * (1.0 + sqr(F));
	add		$tmp74 $const11 $tmp73 	%line{225} %argrw{"wrr"}
	mul		___219_F $const16 $tmp74 	%argrw{"wrr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:226
#         F *= sqr (beta / (g+c));
	add		$tmp76 ___217_g ___217_c 	%line{226} %argrw{"wrr"}
	div		$tmp77 ___219_beta $tmp76 	%argrw{"wrr"}
	functioncall	$const15 139 	%argrw{"r"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:215
#     float sqr(float x) { return x*x; }
	mul		$tmp75 $tmp77 $tmp77 	%line{215} %argrw{"wrr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:226
#         F *= sqr (beta / (g+c));
	mul		___219_F ___219_F $tmp75 	%line{226} %argrw{"wrr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:227
#         Kr = F;
	assign		___308_Kr ___219_F 	%line{227} %argrw{"wr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:228
#         Kt = (1.0 - Kr) * eta*eta;
	sub		$tmp78 $const11 ___308_Kr 	%line{228} %argrw{"wrr"}
	mul		$tmp79 $tmp78 $tmp58 	%argrw{"wrr"}
	mul		___308_Kt $tmp79 $tmp58 	%argrw{"wrr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:231
#         T = refract(I, N, eta);
	functioncall	$const17 161 	%line{231} %argrw{"r"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:207
#     float IdotN = dot (I, N);
	dot		___216_IdotN I normalCamera 	%line{207} %argrw{"wrr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:208
#     float k = 1 - eta*eta * (1 - IdotN*IdotN);
	mul		$tmp80 $tmp58 $tmp58 	%line{208} %argrw{"wrr"}
	mul		$tmp81 ___216_IdotN ___216_IdotN 	%argrw{"wrr"}
	sub		$tmp82 $const11 $tmp81 	%argrw{"wrr"}
	mul		$tmp83 $tmp80 $tmp82 	%argrw{"wrr"}
	sub		___216_k $const11 $tmp83 	%argrw{"wrr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:209
#     return (k < 0) ? vector(0,0,0) : (eta*I - N * (eta*IdotN + sqrt(k)));
	lt		$tmp84 ___216_k $const2 	%line{209} %argrw{"wrr"}
	if		$tmp84 154 160 	%argrw{"r"}
	assign		___221_T $const18 	%argrw{"wr"}
	mul		$tmp85 $tmp58 I 	%argrw{"wrr"}
	mul		$tmp86 $tmp58 ___216_IdotN 	%argrw{"wrr"}
	sqrt		$tmp87 ___216_k 	%argrw{"wr"}
	add		$tmp88 $tmp86 $tmp87 	%argrw{"wrr"}
	mul		$tmp89 normalCamera $tmp88 	%argrw{"wrr"}
	sub		___221_T $tmp85 $tmp89 	%argrw{"wrr"}
	return
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:234
#         Kr = 1.0;
	assign		___308_Kr $const11 	%line{234} %argrw{"wr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:235
#         Kt = 0.0;
	assign		___308_Kt $const6 	%line{235} %argrw{"wr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:236
#         T = vector (0,0,0);
	assign		___221_T $const18 	%line{236} %argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:254
#     else
	assign		$tmp90 specularColor1 	%filename{"H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl"} %line{254} %argrw{"wr"}
	functioncall	$const19 194 	%argrw{"r"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:10
#     float eta = 1.0 / ior;
	assign		___299_result $const2 	%line{10} %argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:11
# 	vector Normal = normalCamera;
	div		___299_eta $const11 ___309_ior 	%line{11} %argrw{"wrr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:12
# 	vector Tangent = normalize(dPdu);	
	assign		___299_Normal normalCamera 	%line{12} %argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:13
# 
	normalize	___299_Tangent dPdu 	%line{13} %argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:15
#     {
	eq		$tmp91 reflectionMdf $const20 	%line{15} %argrw{"wrr"}
	if		$tmp91 175 193 	%argrw{"r"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:17
#     }
	closure		$tmp92 $const21 ___299_Normal 	%line{17} %argrw{"wrr"}
	mul		$tmp93 specular1 $tmp90 	%argrw{"wrr"}
	mul		___299_result $tmp92 $tmp93 	%argrw{"wrr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:22
#         result = specular * specularColor * microfacet(mdf, Normal, Tangent, ax, ay, eta, 0);
	functioncall	$const22 190 	%line{22} %argrw{"r"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\src\\include\\appleseed\\microfacet.h:55
# #define APPLESEED_DEFAULT_MDF_ROUGHNESS 0.1
	fabs		$tmp94 anisotropy1 	%filename{"H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\src\\include\\appleseed\\microfacet.h"} %line{55} %argrw{"wr"}
	mul		$tmp95 $tmp94 $const23 	%argrw{"wrr"}
	sub		$tmp96 $const11 $tmp95 	%argrw{"wrr"}
	sqrt		___297_aspect $tmp96 	%argrw{"wr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\src\\include\\appleseed\\microfacet.h:56
# 
	mul		___297_r2 roughness1 roughness1 	%line{56} %argrw{"wrr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\src\\include\\appleseed\\microfacet.h:58
#     string help = "Microfacet distribution to use: Specular, Beckmann or GGX.",   \
	div		$tmp97 ___297_r2 ___297_aspect 	%line{58} %argrw{"wrr"}
	max		___301_ax $const24 $tmp97 	%argrw{"wrr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\src\\include\\appleseed\\microfacet.h:59
#     string widget = "popup",                                                      \
	mul		$tmp98 ___297_r2 ___297_aspect 	%line{59} %argrw{"wrr"}
	max		___301_ay $const24 $tmp98 	%argrw{"wrr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\src\\include\\appleseed\\microfacet.h:61
# 
	lt		$tmp99 anisotropy1 $const2 	%line{61} %argrw{"wrr"}
	if		$tmp99 190 190 	%argrw{"r"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\src\\include\\appleseed\\microfacet.h:64
#     float min = 0.001,                       \
	assign		___298_tmp ___301_ax 	%line{64} %argrw{"wr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\src\\include\\appleseed\\microfacet.h:65
#     float max = 1.0
	assign		___301_ax ___301_ay 	%line{65} %argrw{"wr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\src\\include\\appleseed\\microfacet.h:66
# 
	assign		___301_ay ___298_tmp 	%line{66} %argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:23
#     }
	closure		$tmp100 $const25 reflectionMdf ___299_Normal ___299_Tangent ___301_ax ___301_ay ___299_eta $const2 	%filename{"H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl"} %line{23} %argrw{"wrrrrrrrr"}
	mul		$tmp101 specular1 $tmp90 	%argrw{"wrr"}
	mul		___299_result $tmp100 $tmp101 	%argrw{"wrr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:25
# }
	assign		___308_reflectionClosure ___299_result 	%line{25} %argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:255
# 		}
	max		___308_Kr reflectivityAtZeroDeg ___308_Kr 	%line{255} %argrw{"wrr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:257
# 		{
	if		___308_doRefraction 301 301 	%line{257} %argrw{"r"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:260
# 
	assign		___310_absorptionCol $const11 	%line{260} %argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:262
# 			{
	backfacing	$tmp102 	%line{262} %argrw{"w"}
	if		$tmp102 208 210 	%argrw{"r"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:264
# 				getattribute("path:ray_ior", to_ior);
	assign		___310_from_ior refractionIOR 	%line{264} %argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:265
# 				
	getattribute	$tmp103 $const26 ___310_to_ior 	%line{265} %argrw{"wrw"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:267
# 				{
	neq		$tmp104 absorption $const6 	%line{267} %argrw{"wrr"}
	if		$tmp104 208 208 	%argrw{"r"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:270
# 					absorptionCol = exp(-absorption * absorptionColor * length);
	getattribute	$tmp105 $const27 ___312_length 	%line{270} %argrw{"wrw"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:271
# 				}
	neg		$tmp106 absorption 	%line{271} %argrw{"wr"}
	mul		$tmp107 $tmp106 absorptionColor 	%argrw{"wrr"}
	mul		$tmp108 $tmp107 ___312_length 	%argrw{"wrr"}
	exp		___310_absorptionCol $tmp108 	%argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:277
# 				to_ior = refractionIOR;
	getattribute	$tmp109 $const26 ___310_from_ior 	%line{277} %argrw{"wrw"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:278
# 			}
	assign		___310_to_ior refractionIOR 	%line{278} %argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:280
# 			// save Kr with new local variable
	div		___310_eta ___310_from_ior ___310_to_ior 	%line{280} %argrw{"wrr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:283
# 			refractionClosure = calculateRefraction( eta, refractionMdf, color(refractionColor), refractivity, roughness, normalCamera) * absorptionCol;
	functioncall	$const12 271 	%line{283} %argrw{"r"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:244
#     fresnel(I, N, eta, Kr, Kt, R, T);
	functioncall	$const12 271 	%filename{"H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h"} %line{244} %argrw{"r"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:216
#     float c = dot(I, N);
	dot		___217_c I normalCamera 	%line{216} %argrw{"wrr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:217
#     if (c < 0)
	lt		$tmp110 ___217_c $const2 	%line{217} %argrw{"wrr"}
	if		$tmp110 217 217 	%argrw{"r"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:218
#         c = -c;
	neg		___217_c ___217_c 	%line{218} %argrw{"wr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:219
#     R = reflect(I, N);
	functioncall	$const13 222 	%line{219} %argrw{"r"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:205
# vector reflect (vector I, vector N) { return I - 2*dot(N,I)*N; }
	dot		$tmp111 normalCamera I 	%line{205} %argrw{"wrr"}
	mul		$tmp112 $const14 $tmp111 	%argrw{"wrr"}
	mul		$tmp113 $tmp112 normalCamera 	%argrw{"wrr"}
	sub		___221_R I $tmp113 	%argrw{"wrr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:220
#     float g = 1.0 / sqr(eta) - 1.0 + c * c;
	functioncall	$const15 224 	%line{220} %argrw{"r"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:215
#     float sqr(float x) { return x*x; }
	mul		$tmp114 ___310_eta ___310_eta 	%line{215} %argrw{"wrr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:220
#     float g = 1.0 / sqr(eta) - 1.0 + c * c;
	div		$tmp115 $const11 $tmp114 	%line{220} %argrw{"wrr"}
	sub		$tmp116 $tmp115 $const11 	%argrw{"wrr"}
	mul		$tmp117 ___217_c ___217_c 	%argrw{"wrr"}
	add		___217_g $tmp116 $tmp117 	%argrw{"wrr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:221
#     if (g >= 0.0) {
	ge		$tmp118 ___217_g $const6 	%line{221} %argrw{"wrr"}
	if		$tmp118 268 271 	%argrw{"r"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:222
#         g = sqrt (g);
	sqrt		___217_g ___217_g 	%line{222} %argrw{"wr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:223
#         float beta = g - c;
	sub		___219_beta ___217_g ___217_c 	%line{223} %argrw{"wrr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:224
#         float F = (c * (g+c) - 1.0) / (c * beta + 1.0);
	add		$tmp119 ___217_g ___217_c 	%line{224} %argrw{"wrr"}
	mul		$tmp120 ___217_c $tmp119 	%argrw{"wrr"}
	sub		$tmp121 $tmp120 $const11 	%argrw{"wrr"}
	mul		$tmp122 ___217_c ___219_beta 	%argrw{"wrr"}
	add		$tmp123 $tmp122 $const11 	%argrw{"wrr"}
	div		___219_F $tmp121 $tmp123 	%argrw{"wrr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:225
#         F = 0.5 * (1.0 + sqr(F));
	functioncall	$const15 240 	%line{225} %argrw{"r"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:215
#     float sqr(float x) { return x*x; }
	mul		$tmp124 ___219_F ___219_F 	%line{215} %argrw{"wrr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:225
#         F = 0.5 * (1.0 + sqr(F));
	add		$tmp125 $const11 $tmp124 	%line{225} %argrw{"wrr"}
	mul		___219_F $const16 $tmp125 	%argrw{"wrr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:226
#         F *= sqr (beta / (g+c));
	add		$tmp127 ___217_g ___217_c 	%line{226} %argrw{"wrr"}
	div		$tmp128 ___219_beta $tmp127 	%argrw{"wrr"}
	functioncall	$const15 246 	%argrw{"r"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:215
#     float sqr(float x) { return x*x; }
	mul		$tmp126 $tmp128 $tmp128 	%line{215} %argrw{"wrr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:226
#         F *= sqr (beta / (g+c));
	mul		___219_F ___219_F $tmp126 	%line{226} %argrw{"wrr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:227
#         Kr = F;
	assign		___310_krr ___219_F 	%line{227} %argrw{"wr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:228
#         Kt = (1.0 - Kr) * eta*eta;
	sub		$tmp129 $const11 ___310_krr 	%line{228} %argrw{"wrr"}
	mul		$tmp130 $tmp129 ___310_eta 	%argrw{"wrr"}
	mul		___308_Kt $tmp130 ___310_eta 	%argrw{"wrr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:231
#         T = refract(I, N, eta);
	functioncall	$const17 268 	%line{231} %argrw{"r"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:207
#     float IdotN = dot (I, N);
	dot		___216_IdotN I normalCamera 	%line{207} %argrw{"wrr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:208
#     float k = 1 - eta*eta * (1 - IdotN*IdotN);
	mul		$tmp131 ___310_eta ___310_eta 	%line{208} %argrw{"wrr"}
	mul		$tmp132 ___216_IdotN ___216_IdotN 	%argrw{"wrr"}
	sub		$tmp133 $const11 $tmp132 	%argrw{"wrr"}
	mul		$tmp134 $tmp131 $tmp133 	%argrw{"wrr"}
	sub		___216_k $const11 $tmp134 	%argrw{"wrr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:209
#     return (k < 0) ? vector(0,0,0) : (eta*I - N * (eta*IdotN + sqrt(k)));
	lt		$tmp135 ___216_k $const2 	%line{209} %argrw{"wrr"}
	if		$tmp135 261 267 	%argrw{"r"}
	assign		___221_T $const18 	%argrw{"wr"}
	mul		$tmp136 ___310_eta I 	%argrw{"wrr"}
	mul		$tmp137 ___310_eta ___216_IdotN 	%argrw{"wrr"}
	sqrt		$tmp138 ___216_k 	%argrw{"wr"}
	add		$tmp139 $tmp137 $tmp138 	%argrw{"wrr"}
	mul		$tmp140 normalCamera $tmp139 	%argrw{"wrr"}
	sub		___221_T $tmp136 $tmp140 	%argrw{"wrr"}
	return
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:234
#         Kr = 1.0;
	assign		___310_krr $const11 	%line{234} %argrw{"wr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:235
#         Kt = 0.0;
	assign		___308_Kt $const6 	%line{235} %argrw{"wr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:236
#         T = vector (0,0,0);
	assign		___221_T $const18 	%line{236} %argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:284
# {
	assign		$tmp142 refractionColor 	%filename{"H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl"} %line{284} %argrw{"wr"}
	functioncall	$const28 300 	%argrw{"r"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:30
# 	vector Normal = normalCamera;
	assign		___302_result $const2 	%line{30} %argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:31
# 	vector Tangent = normalize(dPdu);	
	assign		___302_Normal normalCamera 	%line{31} %argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:32
# 
	normalize	___302_Tangent dPdu 	%line{32} %argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:34
#     {
	eq		$tmp143 refractionMdf $const20 	%line{34} %argrw{"wrr"}
	if		$tmp143 281 299 	%argrw{"r"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:36
#     }
	closure		$tmp144 $const29 ___302_Normal ___310_eta 	%line{36} %argrw{"wrrr"}
	mul		$tmp145 refractivity $tmp142 	%argrw{"wrr"}
	mul		___302_result $tmp144 $tmp145 	%argrw{"wrr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:41
#         result = refractivity * refractionColor * microfacet(mdf, Normal, Tangent, ax, ay, eta, 1);
	functioncall	$const22 296 	%line{41} %argrw{"r"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\src\\include\\appleseed\\microfacet.h:55
# // copies of the Software, and to permit persons to whom the Software is
	fabs		$tmp146 $const11 	%filename{"H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\src\\include\\appleseed\\microfacet.h"} %line{55} %argrw{"wr"}
	mul		$tmp147 $tmp146 $const23 	%argrw{"wrr"}
	sub		$tmp148 $const11 $tmp147 	%argrw{"wrr"}
	sqrt		___297_aspect $tmp148 	%argrw{"wr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\src\\include\\appleseed\\microfacet.h:56
# // furnished to do so, subject to the following conditions:
	mul		___297_r2 roughness roughness 	%line{56} %argrw{"wrr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\src\\include\\appleseed\\microfacet.h:58
# // The above copyright notice and this permission notice shall be included in
	div		$tmp149 ___297_r2 ___297_aspect 	%line{58} %argrw{"wrr"}
	max		___304_ax $const24 $tmp149 	%argrw{"wrr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\src\\include\\appleseed\\microfacet.h:59
# // all copies or substantial portions of the Software.
	mul		$tmp150 ___297_r2 ___297_aspect 	%line{59} %argrw{"wrr"}
	max		___304_ay $const24 $tmp150 	%argrw{"wrr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\src\\include\\appleseed\\microfacet.h:61
# // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	lt		$tmp151 $const11 $const2 	%line{61} %argrw{"wrr"}
	if		$tmp151 296 296 	%argrw{"r"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\src\\include\\appleseed\\microfacet.h:64
# // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	assign		___298_tmp ___304_ax 	%line{64} %argrw{"wr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\src\\include\\appleseed\\microfacet.h:65
# // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	assign		___304_ax ___304_ay 	%line{65} %argrw{"wr"}
# H:/UserDatenHaggi\\Documents\\coding\\mayaToAppleseed\\mtap_devmodule\\shaders\\src\\include\\appleseed\\microfacet.h:66
# // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	assign		___304_ay ___298_tmp 	%line{66} %argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:42
#     }
	closure		$tmp152 $const25 refractionMdf ___302_Normal ___302_Tangent ___304_ax ___304_ay ___310_eta $const1 	%filename{"H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl"} %line{42} %argrw{"wrrrrrrrr"}
	mul		$tmp153 refractivity $tmp142 	%argrw{"wrr"}
	mul		___302_result $tmp152 $tmp153 	%argrw{"wrr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:44
# }
	assign		$tmp141 ___302_result 	%line{44} %argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:284
# 		}
	mul		___308_refractionClosure $tmp141 ___310_absorptionCol 	%line{284} %argrw{"wrr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:286
# 		{
	gt		$tmp154 SSS1 $const2 	%line{286} %argrw{"wrr"}
	if		$tmp154 310 310 	%argrw{"r"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:289
# 			//if (depth == 0)
	getattribute	$tmp155 $const30 ___314_depth 	%line{289} %argrw{"wrw"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:292
# 				float g = 0.0;
	assign		___315_sssIOR $const31 	%line{292} %argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:293
# 				//directional_dipole
	assign		___315_g $const6 	%line{293} %argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:297
# 			}
	assign		$tmp156 SSS1Color 	%line{297} %argrw{"wr"}
	mul		$tmp158 SSS1Radius SSS1RadiusMultiplier 	%argrw{"wrr"}
	assign		$tmp157 $tmp158 	%argrw{"wr"}
	closure		___308_subsurfaceClosure $const33 $const32 N $tmp156 $tmp157 ___315_sssIOR ___315_g 	%argrw{"wrrrrrrr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:300
# 		{
	gt		$tmp159 emissionMultiplier $const2 	%line{300} %argrw{"wrr"}
	if		$tmp159 316 316 	%argrw{"r"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:302
# 		}
	closure		$tmp160 $const5 	%line{302} %argrw{"wr"}
	assign		$tmp161 emissionColor 	%argrw{"wr"}
	mul		$tmp162 $tmp160 $tmp161 	%argrw{"wrr"}
	mul		___308_emissionClosure $tmp162 emissionMultiplier 	%argrw{"wrr"}
# H:/UserDatenHaggi/Documents/coding/mayaToAppleseed/mtap_devmodule/shaders\\src\\maya\\uberShader.osl:304
# 	}	
	sub		$tmp163 $const11 refractivity 	%line{304} %argrw{"wrr"}
	mul		$tmp164 ___308_diffuseClosure $tmp163 	%argrw{"wrr"}
	mul		$tmp165 ___308_refractionClosure refractivity 	%argrw{"wrr"}
	add		$tmp166 $tmp164 $tmp165 	%argrw{"wrr"}
	sub		$tmp167 $const11 ___308_Kr 	%argrw{"wrr"}
	mul		$tmp168 $tmp166 $tmp167 	%argrw{"wrr"}
	mul		$tmp169 ___308_reflectionClosure ___308_Kr 	%argrw{"wrr"}
	add		$tmp170 $tmp168 $tmp169 	%argrw{"wrr"}
	add		$tmp171 $tmp170 ___308_subsurfaceClosure 	%argrw{"wrr"}
	add		outColor $tmp171 ___308_emissionClosure 	%argrw{"wrr"}
	end
